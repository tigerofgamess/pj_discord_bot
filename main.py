import discord
from discord.ext import commands
from discord import app_commands
import os
import google.generativeai as genai
import google.api_core.exceptions as api_exceptions # Import for specific error handling
from dotenv import load_dotenv
import time

# keep_alive
from keep_alive import keep_alive
keep_alive()

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô .env
load_dotenv()

DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
GOOGLE_API_KEY = os.getenv("GOOGLE_API_KEY")

print("‡πÇ‡∏ó‡πÄ‡∏Ñ‡∏ô Discord:", DISCORD_TOKEN)
print("API Key Google:", GOOGLE_API_KEY)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ API Key ‡πÅ‡∏•‡∏∞ Discord Token ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if not DISCORD_TOKEN:
    print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö DISCORD_TOKEN ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤")
    exit()
if not GOOGLE_API_KEY:
    print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö GOOGLE_API_KEY ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤")
    exit()

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Gemini AI
try:
    genai.configure(api_key=GOOGLE_API_KEY)
    model = genai.GenerativeModel("gemini-2.5-flash-lite")
except Exception as e:
    print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Google Gemini AI: {e}")
    exit()

# ‡∏™‡∏£‡πâ‡∏≤‡∏á bot
intents = discord.Intents.default()
intents.members = True
intents.messages = True
intents.message_content = True
intents.presences = True

bot = commands.Bot(command_prefix="!", intents=intents)

INITIAL_PROMPT_PARTS = [
    {"role": "user", "parts": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ AI ‡∏ä‡∏∑‡πà‡∏≠ '‡πÅ‡∏û‡∏ó' ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏®‡∏´‡∏ç‡∏¥‡∏á ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏™‡∏£‡∏£‡∏û‡∏ô‡∏≤‡∏°‡πÅ‡∏ó‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏ß‡πà‡∏≤ '‡πÅ‡∏û‡∏ó' ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ö‡πà‡∏á‡∏ö‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏®‡∏´‡∏ç‡∏¥‡∏á‡πÄ‡∏™‡∏°‡∏≠ ‡πÄ‡∏ä‡πà‡∏ô '‡∏Ñ‡πà‡∏∞', '‡∏ô‡∏∞‡∏Ñ‡∏∞', '‡∏à‡πâ‡∏∞' ‡πÅ‡∏•‡∏∞‡∏û‡∏π‡∏î‡∏à‡∏≤‡πÑ‡∏û‡πÄ‡∏£‡∏≤‡∏∞‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÅ‡∏ó‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ß‡πà‡∏≤ '‡∏Ñ‡∏∏‡∏ì' ‡∏´‡∏£‡∏∑‡∏≠ '‡∏ó‡πà‡∏≤‡∏ô' ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ '‡∏Ñ‡∏£‡∏±‡∏ö' ‡∏´‡∏£‡∏∑‡∏≠ '‡∏Ñ‡πà‡∏∞' ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ö‡πà‡∏á‡∏ö‡∏≠‡∏Å‡πÄ‡∏û‡∏®‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏î‡πá‡∏î‡∏Ç‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏ï‡∏£‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏†‡∏≤‡∏û‡πÄ‡∏™‡∏°‡∏≠"},
    {"role": "model", "parts": "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡πÅ‡∏û‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏û‡∏ó‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏Ñ‡∏∞?"},

    {"role": "user", "parts": "‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?"},
    {"role": "model", "parts": "‡πÅ‡∏û‡∏ó‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏û‡∏ó‡∏Ñ‡πà‡∏∞ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏ô‡∏∞‡∏Ñ‡∏∞!"},

    {"role": "user", "parts": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÉ‡∏Ñ‡∏£?"},
    {"role": "model", "parts": "‡πÅ‡∏û‡∏ó‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ AI ‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏û‡∏ó‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞?"},
]

# ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°
@bot.event
async def on_ready():
    print(f"‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠ {bot.user}")
    try:
        synced = await bot.tree.sync()
        print(f"üîÅ ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß {len(synced)} ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á")
    except Exception as e:
        print(f"‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    #aawait bot.change_presence(activity=discord.Game(name="Microsoft Flight Simulator 2024"))
    activity = discord.Activity(type=discord.ActivityType.listening, name="Chelsea Cutler")
    await bot.change_presence(activity=activity)
    #await bot.change_presence(discord.ActivityType.watching(name=""))
    #await bot.change_presence(discord.ActivityType.custom(name=""))
    #await bot.change_presence(activity=discord.Game(name="Microsoft Flight Simulator 2024",start=datetime.datetime.now(datetime.timezone.utc)))

# ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    prefix = "‡πÅ‡∏û‡∏ó "
    if message.content.startswith(prefix):
        prompt = message.content[len(prefix):].strip()
        if not prompt:
            await message.channel.send("‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏Ñ‡πà‡∏∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üòä")
            return

        try:
            response = model.generate_content(prompt)
            if response and response.text:
                await message.channel.send(response.text)
            else:
                await message.channel.send("‡πÅ‡∏û‡∏ó‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ñ‡πà‡∏∞ ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞")
        except api_exceptions.GoogleAPIError as e:
            await message.channel.send("‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Google ‡∏Ñ‡πà‡∏∞")
            print(f"Gemini API Error: {e}")
        except Exception as e:
            await message.channel.send("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î‡∏Ñ‡πà‡∏∞")
            print(f"Unexpected Error: {e}")
    else:
        await bot.process_commands(message)

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /ping
@bot.tree.command(name="ping", description="‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö Pong!")
async def ping(interaction: discord.Interaction):
    await interaction.response.send_message("üèì Pong!")

# ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
bot.run(DISCORD_TOKEN)





